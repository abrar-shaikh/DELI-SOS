swagger: "2.0"
info:
  title: "DeliSOS"
  version: "1.0.0"
host: "66.70.179.133:8080"
consumes:
- "application/json"
- "application/x-www-form-urlencoded"
produces:
- "application/json"
schemes:
- "http"
tags:
  - name: user
    description: "user api"
  - name: admin
    description: "admin api"
paths:
  "/user/login":
      post:
        tags:
        - 'user'
        summary: Authenticating user
        parameters: 
          - in: body
            name: user
            description: login user.
            required: true
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                    type: string
                password:
                    type: string
        responses:
          "200":
            description: Sucessfully login
            schema:
              $ref: '#/definitions/SuccessMessage'
          "400":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "404":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'     

  "/user/signUp":
      post:
        tags:
        - 'user'
        summary: Registering new user.
        parameters: 
          - in: body
            name: user
            description: register in body.
            required: true
            schema:
              type: object
              required:
                - email
                - password
                - name  
              properties:
                name:
                    type: string
                email:
                    type: string
                password:
                    type: string
                    format: One capital letter,small letter,special char and one number is required.Length lies between 6 to 16
        responses:
          "201":
            description: Sucessfully registered.
            schema:
              $ref: '#/definitions/SuccessMessage'
          "400":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "404":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
  
  "/user/socialLogin":
      post:
        tags:
        - 'user'
        summary: login user by social account.
        parameters: 
          - in: body
            name: user
            description: login via social id.
            required: true
            schema:
              type: object
              required:
                - socialId
                - name  
              properties:
                name:
                    type: string
                socialId:
                    type: string
        responses:
          "200":
            description: Sucessfully Login.
            schema:
              $ref: '#/definitions/SuccessMessage'
          "400":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
  
  "/user/forgotPassword":
      post:
        tags:
        - 'user'
        summary: send new password via email to user.
        parameters: 
          - in: body
            name: user
            description: email for get new password.
            required: true
            schema:
              type: object
              required:
                - email 
              properties:
                email:
                    type: string
        responses:
          "200":
            description: mail sent
            schema:
              $ref: '#/definitions/SuccessMessage'
          "400":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "404":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'  
          "501":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage' 
            
  "/user/getUserDetail/{id}":
      get:
        tags:
        - 'user'
        summary: get detail for particular user.
        parameters: 
          - name: id
            in: path
            description: user id for get details.
            required: true
            type: string
            
          - name: authorization
            in: header
            description: token for validation.
            required: true
            type: string
            
            
              
        responses:
          "200":
            description: ok
            schema:
              $ref: '#/definitions/SuccessMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "404":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "400":
            description: Error message.
            schema:
              $ref: '#/definitions/errorMessage'
              
  "/user/addRestaurant":
      post:
        tags:
        - 'user'
        summary: get detail for particular user.
        parameters: 
          - name: user
            in: body
            description: register restaurant in body.
            required: true
            schema:
              type: object
              required:
                - name
                - description
                - latitude
                - longitude
                - openTime
                - closeTime
              properties:
                name:
                    type: string
                description:
                    type: string
                latitude:
                    type: string
                longitude:
                    type: string
                openTime:
                    type: string
                closeTime:
                    type: string
            
          - name: authorization
            in: header
            description: token for validation.
            required: true
            type: string
              
        responses:
          "201":
            description: add request sent
            schema:
              $ref: '#/definitions/SuccessMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "400":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'

  "/user/getRestaurantDetail/{id}":
      get:
        tags:
        - 'user'
        summary: get detail for particular user.
        parameters: 
          - name: id
            in: path
            description: restaurant id for get details.
            required: true
            type: string
            
          - name: authorization
            in: header
            description: token for validation.
            required: true
            type: string
            
            
              
        responses:
          "200":
            description: ok
            schema:
              $ref: '#/definitions/SuccessMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "404":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "400":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
              
  "/user/addPhoto":
      post:
        tags:
        - 'user'
        summary: add photo to particular restaurant.
        parameters: 
          - in: body
            name: user
            description: add photo of restaurant.
            required: true
            schema:
              type: object
              required:
                - restId
                - file
              properties:
                restId:
                    type: string
                file:
                    type: string
                    format: base64 of image
          
          - name: authorization
            in: header
            description: token for validation.
            required: true
            type: string
            
        responses:
          "201":
            description: Sucessfully registered.
            schema:
              $ref: '#/definitions/SuccessMessage'
          "400":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
        
  "/user/deletePhoto":
      post:
        tags:
        - 'user'
        summary: delete photo of particular restaurant.
        parameters: 
          - in: body
            name: user
            description: register in body.
            required: true
            schema:
              type: object
              required:
                - restId
                - url
              properties:
                restId:
                    type: string
                url:
                    type: string
          
          - name: authorization
            in: header
            description: token for validation.
            required: true
            type: string
        
        responses:
          "201":
            description: Sucessfully registered.
            schema:
              $ref: '#/definitions/SuccessMessage'
          "400":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
          "500":
            description: Erorr message.
            schema:
              $ref: '#/definitions/errorMessage'
              
definitions:
  errorMessage:
    type: "object"
    properties:
      code:
        type: "integer"
      messgae:
        type: "string"
    
  SuccessMessage:
    type: "object"
    properties:
      code:
        type: "integer"
      messgae:
        type: "string"  
    
    
    
    
    
    
    
    
    
    
    
    
          