{"version":3,"sources":["webpack:///./src/app/theme/pages/default/angular/email-templates/email-templates.component.css","webpack:///./src/app/theme/pages/default/angular/email-templates/email-templates.component.html","webpack:///./src/app/theme/pages/default/angular/email-templates/email-templates.component.ts","webpack:///./src/app/theme/pages/default/angular/email-templates/email-templates.module.ts","webpack:///./src/app/theme/pages/default/angular/email-templates/email.routing.ts","webpack:///./src/app/theme/pages/default/angular/email-templates/email.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0BAA0B,yBAAyB,uBAAuB,+BAA+B,MAAM,WAAW,+BAA+B,yBAAyB,uBAAuB,kBAAkB,oCAAoC,0BAA0B,4BAA4B,uBAAuB,oBAAoB,GAAG,YAAY,kBAAkB,oCAAoC,0BAA0B,4BAA4B,GAAG,YAAY,kBAAkB,oCAAoC,0BAA0B,6BAA6B,KAAK,cAAc,kBAAkB,oCAAoC,0BAA0B,4BAA4B,KAAK,eAAe,8BAA8B,mCAAmC,GAAG,YAAY,iBAAiB,IAAI,I;;;;;;;;;;;ACA/0B,khBAAkhB,YAAY,qBAAqB,4BAA4B,mLAAmL,MAAM,iVAAiV,mkBAAmkB,MAAM,oaAAoa,4jB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCvhE;AACgC;AACa;AACnC;AACd;AACA;AAC2B;AA+BtE;IAcE,0BAAmB,WAA2B,EACpC,OAAe,EACf,YAAyB,EACzB,YAAsB,EACtB,YAA0B,EAC1B,YAA2B;QALlB,gBAAW,GAAX,WAAW,CAAgB;QACpC,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAU;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAe;QAlBrC,4BAAuB,GAAU,EAAE,CAAC;QAE1B,eAAU,GAAG,IAAI,0DAAY,EAAO,CAAC;QAK/C,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAUuB,CAAC;IAC1C,mCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,sBAAI,+BAAC;aAAL;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QACjC,CAAC;;;OAAA;IACD,yCAAc,GAAd;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACvC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IACD,qDAA0B,GAA1B;QAAA,iBAUC;QARC,IAAI,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC3D,KAAI,CAAC,uBAAuB,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAGL,CAAC;IACD,oCAAS,GAAT;QAAA,iBA0CC;QAxCC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,MAAM,GAAG;gBACX,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK;gBACzC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK;gBAC7C,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK;aAEpD;YACD,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAElC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,CAC1C,cAAI;gBACF,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAI,CAAC,0BAA0B,EAAE,CAAC;gBAClC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;gBAC3B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;YAC9D,CAAC,EACD,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;gBAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,OAAO,GAAG;gBACZ,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK;gBACzC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK;gBAC7C,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK;aAEpD;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CACtD,cAAI;gBACF,KAAI,CAAC,0BAA0B,EAAE,CAAC;gBAClC,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;gBAC3B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;YAC9D,CAAC,EACD,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC5B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IACD,sBAAsB;IACtB,wHAAwH;IACxH,kGAAkG;IAElG,aAAa;IAEb,sCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,QAAa;YACvD,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IACD,uCAAY,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IACD,mCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,+BAA+B;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAhHS;QAAT,4DAAM,EAAE;;wDAAsC;IAEtC;QAAR,2DAAK,EAAE;;kDAAM;IACL;QAAR,2DAAK,EAAE;;qDAAS;IACR;QAAR,2DAAK,EAAE;;gDAAI;IAPD,gBAAgB;QA7B5B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,q3BAuBX;;SAEA,CAAC;yCAgBgC,yEAAc;YAC3B,sDAAM;YACD,0DAAW;YACX,mEAAQ;YACR,2DAAY;YACZ,wDAAa;OAnB1B,gBAAgB,CAyH5B;IAAD,uBAAC;CAAA;AAzH4B;AA+H7B;IAuBE,iCACU,YAAsB,EACtB,QAAkB,EAClB,YAA2B,EAC3B,YAAyB,EACzB,YAA0B;QALpC,iBAUC;QATS,iBAAY,GAAZ,YAAY,CAAU;QACtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAe;QAC3B,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAc;QApBpC,UAAK,GAAY,KAAK,CAAC;QACvB,WAAM,GAAS,KAAK,CAAC;QACrB,WAAM,GAAS,KAAK,CAAC;QAGrB,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAG;YACb,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,OAAO;YACf,SAAS,EAAE,OAAO;YAClB,WAAW,EAAE,4CAA4C;SAC1D,CAAC;QAQA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YAChD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC;YAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI;QAChD,CAAC,CAAC;IACJ,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAE/B,CAAC;IACD,gDAAc,GAAd;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACvC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,OAAO,EAAE,EAAE;SAIZ,CAAC,CAAC;IAEL,CAAC;IAED,uDAAqB,GAArB;QAAA,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,QAAa;YACvD,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAI,CAAC,UAAU,CAAC;QAEnD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sBAAI,sCAAC;aAAL;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QACjC,CAAC;;;OAAA;IACD,0CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAGtB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,sCAAI,GAAJ,UAAK,QAAQ;QAEX,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC;QAChC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,KAAK,GAAG,IAAI;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,GAAG,KAAK;QACrB,CAAC;QACD,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1D,QAAQ,CAAC,iBAAiB,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7D,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAChE,QAAQ,CAAC,iBAAiB,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACtE,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAChD,CAAC;IACD,sCAAI,GAAJ,UAAK,aAAa;QAChB,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,IAAI;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK;QACd,CAAC;QACD,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1D,6CAA6C;QAC7C,QAAQ,CAAC,iBAAiB,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACvE,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1E,QAAQ,CAAC,iBAAiB,CAAC,OAAO,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAChF,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAChD,CAAC;IACD,6CAAW,GAAX,UAAY,EAAE;QAAd,iBAiBC;QAfC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAC1C,cAAI;YACF,KAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;YAC5D,mCAAmC;YACnC,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,QAAa;gBACvD,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAExC,CAAC,CAAC;QACJ,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,wCAAM,GAAN,UAAO,OAAO;QACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC;IACD,6CAAW,GAAX,UAAY,OAAO;QACjB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IACD,8CAAY,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IA/HQ;QAAR,2DAAK,EAAE;;yDAAM;IACL;QAAR,2DAAK,EAAE;;4DAAS;IACR;QAAR,2DAAK,EAAE;;uDAAI;IALD,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAyBwB,mEAAQ;YACZ,wDAAQ;YACJ,wDAAa;YACb,0DAAW;YACX,2DAAY;OA5BzB,uBAAuB,CAqInC;IAAD,8BAAC;CAAA;AArImC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrKW;AACM;AACmC;AAC/C;AACM;AACQ;AACA;AACW;AACP;AACd;AACoB;AACjE,2EAA2E;AAE3E,IAAM,MAAM,GAAW,CAAC;QACvB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;QAC3B,QAAQ,EAAE,CAAC;gBACV,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,kFAAuB;aAClC,CAAC;KACF,CAAC,CAAC;AAkBH;IAAA;IACA,CAAC;IADY,oBAAoB;QAhBhC,8DAAQ,CAAC;YACT,OAAO,EAAE;gBACR,4DAAY,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC3C,oEAAY;gBACZ,iEAAkB;gBAClB,0DAAe;gBACf,oEAAS,CAAC,OAAO,EAAE;gBACnB,0DAAW;gBACX,kEAAmB;aACnB;YACD,OAAO,EAAE,CAAC,kFAAuB,EAAE,2EAAgB,CAAC;YACpD,YAAY,EAAE;gBACb,kFAAuB,EAAE,2EAAgB;aAAC;YAC3C,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,eAAe,EAAE,CAAC,2EAAgB,CAAC;SACnC,CAAC;OACW,oBAAoB,CAChC;IAAD,2BAAC;CAAA;AADgC;;;;;;;;;;;;;;;;;;;;;;;;;ACtCqC;AACT;AACpB;AACc;AAGvD,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;QAC3B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,kFAAuB;aAEnC;SAAC;KACL,CAAC;AAQF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAN9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;SACd,CAAC;OAEW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB/B,sDAAsD;AACG;AACM;AACd;AAEV;AAEvC,IAAM,GAAG,GAAW,2CAA2C,CAAC;AAChE,IAAM,IAAI,GAAW,+CAA+C,CAAC;AAOrE;IAEI,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,cAAS,GAAG,IAAI,oDAAO,EAAO;IAG9B,CAAC;IACD,gCAAS,GAAT,UAAU,IAAS;QACf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAC7C,CAAC;IACD,gCAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;IAEzC,CAAC;IACD,yCAAkB,GAAlB;QACI,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE;QAC/B,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;QACzD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/E,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACD,+BAAQ,GAAR,UAAS,KAAU;QACf,IAAI,QAAQ,GAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,GAAG,sBAAsB,GAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC;aAC3G,IAAI,CACD,0DAAG,CAAC,UAAC,GAAa,IAAO,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CACzC,CAAC;IAEV,CAAC;IACD,mCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,oBAAoB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC;aACvF,IAAI,CACD,0DAAG,CAAC,UAAC,GAAY,IAAK,MAAM,CAAC,GAAG,GAAC,CAAC,CACrC,CAAC;IACN,CAAC;IAGD,iCAAU,GAAV,UAAW,KAAS,EAAC,QAAa;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,GAAG,oBAAoB,GAAG,QAAQ,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC;aACzG,IAAI,CACD,0DAAG,CAAC,UAAC,GAAa,IAAO,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CACzC,CAAC;IACV,CAAC;IACD,mCAAY,GAAZ,UAAa,QAAY;QAErB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,GAAG,sBAAsB,GAAG,QAAQ,EAAC,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC;aACxG,IAAI,CACD,0DAAG,CAAC,UAAC,GAAa;YACd,MAAM,CAAC,GAAG;QAAC,CAAC,CAAC,CACpB,CAAC;IAEV,CAAC;IACD,gDAAyB,GAAzB;QAEI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,yBAAyB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC;aAC7F,IAAI,CACD,0DAAG,CAAC,UAAC,GAAY,IAAK,MAAM,CAAC,GAAG,GAAC,CAAC,CACrC,CAAC;IAEN,CAAC;IAxDQ,YAAY;QAJxB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAI4B,+DAAU;OAF3B,YAAY,CA2DxB;IAAD,mBAAC;CAAA;AA3DwB","file":"pages-default-angular-email-templates-email-templates-module.js","sourcesContent":["module.exports = \".header{\\n    font-size: 3.15rem;\\n    margin-left: 30%;\\n    padding: 1.25rem 4.65rem;\\n   }\\n.btn-add{\\n    padding: 1.25rem 1.65rem;\\n    font-size: 1.25rem;\\n    line-height: 1.5;\\n    color:white;\\n    background-color: transparent;\\n    background: #5867dd;\\n    border-color: #5867dd;\\n    margin-left: 95%;\\n    margin-top:2%;\\n}\\n.btn-view{\\n    color:white;\\n    background-color: transparent;\\n    background: #5867dd;\\n    border-color: #5867dd;\\n}\\n.btn-edit{\\n    color:white;\\n    background-color: transparent;\\n    background: #029c16;\\n    border-color:  #029c16;\\n\\n}\\n.btn-delete{\\n    color:white;\\n    background-color: transparent;\\n    background: #a73a08;\\n    border-color: #a73a08;\\n\\n}\\n.ngx-editor {\\n    height: auto !important;\\n    min-height: 250px !important;\\n}\\n.lbl-err {\\n    color: red;\\n } \\n\"","module.exports = \"<h2 class=\\\"header\\\">Email Templates</h2>\\n\\n<div>\\n  <button class=\\\"btn-add\\\" (click)=\\\"open()\\\"><i class=\\\"fas fa-plus\\\"></i></button>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th style=\\\"width:350px\\\"></th>\\n        <th style=\\\"width:350px\\\">Name</th>\\n        <th style=\\\"width:350px\\\">Content</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let email of emailsList\\\">\\n        <td></td>\\n        <td>{{email.name}}</td>\\n        <td>{{email.content | customPipe}}</td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"btn-view\\\">\\n            <i class=\\\"fas fa-eye\\\" (click)=\\\"viewContent(viewEmail)\\\"></i>\\n          </button> &nbsp;&nbsp;\\n          <ng-template #viewEmail let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">View Email Templates</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <label>Content</label>\\n              <div class=\\\"form-group\\\">\\n                <app-ngx-editor [placeholder]=\\\"'Enter text here...'\\\" [spellcheck]=\\\"true\\\" [(ngModel)]=\\\"email.content\\\"\\n                  [config]=\\\"editorConfig\\\"></app-ngx-editor>\\n              </div>\\n            </div>\\n          </ng-template>\\n\\n          <button type=\\\"button\\\" class=\\\"btn-edit\\\">\\n            <i class=\\\"fas fa-edit\\\" (click)=\\\"open(email)\\\"></i>\\n          </button> &nbsp;&nbsp;\\n          <button type=\\\"button\\\" class=\\\"btn-delete\\\" (click)=\\\"delete(content)\\\">\\n            <i class=\\\"fas fa-trash-alt\\\"></i>\\n          </button>\\n          <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n            <div class=\\\"modal-body\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n              <div class=\\\"modal-body\\\">\\n                <img class=\\\"banner-image\\\" src=\\\"./assets/app/media/img/users/delete-icn.svg\\\" height=\\\"60\\\">\\n                <p>Are you sure you want to delete this record?</p>\\n              </div>\\n              <div class=\\\"text-center mt-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-red\\\" (click)=\\\"deleteEmail(email._id)\\\">Delete</button>\\n              </div>\\n            </div>\\n          </ng-template>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Response } from '@angular/http';\nimport { EmailService } from './email.service';\nimport { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators, FormControl, FormGroup, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-email-templates',\n  template: `\n  <div class=\"modal-header\">\n  <h4 class=\"modal-title\">{{ isAdd ? 'Add' :'Edit'}} Email Templates</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n<form  name=\"emailForm\" [formGroup]=\"emailForm\" (ngSubmit)=\"addEmails()\" >\n\n\n<label>Content</label>\n<div class=\"form-group\"><app-ngx-editor [placeholder]=\"'Enter text here...'\" [spellcheck]=\"true\" formControlName=\"content\" [(ngModel)]=\"content\"></app-ngx-editor>\n\n</div>\n\n\n<div class=\"modal-footer\">\n<button type=\"submit\" class=\"btn btn-outline-dark\" [disabled]=\"validateForm()\">Save</button>\n<button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Cancel</button>\n\n</div>\n</form>\n`,\n  styleUrls: ['./email-templates.component.css']\n})\n\nexport class NgbdModalContent {\n  availableEmailTemplates: any[] = [];\n  emailList: Array<any>;\n  @Output() emailsList = new EventEmitter<any>();\n  emailForm: FormGroup;\n  @Input() name;\n  @Input() content;\n  @Input() id;\n  loading = false;\n  submitted = false;\n\n\n  isAdd: boolean;\n\n  constructor(public activeModal: NgbActiveModal,\n    private _router: Router,\n    private _formBuilder: FormBuilder,\n    private modalService: NgbModal,\n    private emailService: EmailService,\n    private toastService: ToastrService) { }\n  ngOnInit() {\n    this.buildEmailForm();\n  }\n\n  get f() {\n    return this.emailForm.controls;\n  }\n  buildEmailForm() {\n    this.emailForm = this._formBuilder.group({\n      id: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      content: '',\n    });\n  }\n  getAvailableEmailTemplates(){\n\n    this.emailService.getAvailableEmailTemplate().subscribe((data)=>{\n      this.availableEmailTemplates=data['response'];\n    },\n    (err) => {\n      console.log(err);\n    });\n    \n\n  }\n  addEmails() {\n\n    if (this.isAdd) {\n      var addObj = {\n        \"id\": this.emailForm.controls['id'].value,\n        \"name\": this.emailForm.controls['name'].value,\n        \"content\": this.emailForm.controls['content'].value,\n\n      }\n      this.getAvailableEmailTemplates();\n\n      this.emailService.addEmail(addObj).subscribe(\n        data => {\n          this.getAllEmail();\n          this.getAvailableEmailTemplates();\n          this.activeModal.dismiss();\n          this.toastService.success(data['response'].responseMessage);\n        },\n        error => {\n          console.log('error' + error);\n          this.toastService.error(error['response'].responseMessage);\n        });\n    } else {\n      var editObj = {\n        \"id\": this.emailForm.controls['id'].value,\n        \"name\": this.emailForm.controls['name'].value,\n        \"content\": this.emailForm.controls['content'].value,\n\n      }\n      console.log('id', this.id)\n      this.emailService.editEmails(editObj, this.id).subscribe(\n        data => {\n          this.getAvailableEmailTemplates();\n          this.getAllEmail();\n          this.activeModal.dismiss();\n          this.toastService.success(data['response'].responseMessage);\n        },\n        error => {\n          console.log('error' + error)\n          this.toastService.error(error['response'].responseMessage);\n        });\n    }\n  }\n  // <label>Name</label>\n  // <div class=\"form-group\"> <input class=\"form-control m-input\" type=\"text\" formControlName=\"name\"  [(ngModel)]=\"name\"> \n  // <span *ngIf=\"emailForm.controls.name.errors?.required\" class=\"lbl-err\">Name is required.</span>\n\n  // </div><br>\n\n  getAllEmail() {\n    this.emailService.getAllEmails().subscribe((response: any) => {\n      this.emailService.setEmails(response);\n    })\n  }\n  validateForm() {\n    if (this.emailForm.valid) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.emailForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n  }\n\n\n\n\n\n}\n@Component({\n  selector: 'app-email-templates',\n  templateUrl: './email-templates.component.html',\n  styleUrls: ['./email-templates.component.css']\n})\nexport class EmailTemplatesComponent implements OnInit {\n  emailsDetail: any;\n  emailsList: any;\n  @Input() name;\n  @Input() content;\n  @Input() id;\n\n  modalReference: any;\n  isAdd: boolean = false;\n  isView:boolean=false;\n  isEdit:boolean=false;\n  emailList: Array<any>;\n  emailForm: FormGroup;\n  loading = false;\n  submitted = false;\n  editorConfig = {\n    editable: false,\n    spellcheck: true,\n    height: '30rem',\n    minHeight: '10rem',\n    placeholder: 'Type something. Test the Editor... ヽ(^。^)丿'\n  };\n  private _modalContent: any;\n  constructor(\n    private modalService: NgbModal,\n    private location: Location,\n    private toastService: ToastrService,\n    private _formBuilder: FormBuilder,\n    private emailService: EmailService) {\n    this.emailService.getEmails().subscribe((data: any) => {\n      console.log('dataaaaa', data)\n      this.emailsList = data.emailList.response.LIST\n    })\n  }\n\n  ngOnInit() {\n    this.buildEmailForm();\n    this.getEmailTemplatesList();\n  \n  }\n  buildEmailForm() {\n    this.emailForm = this._formBuilder.group({\n      id: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      content: '',\n\n\n\n    });\n\n  }\n\n  getEmailTemplatesList() {\n    this.emailService.getAllEmails().subscribe((response: any) => {\n      this.emailsList = response.response.LIST;\n      console.log(\"Email List detail\", this.emailsList)\n\n    });\n  }\n  get f() {\n    return this.emailForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n\n\n    if (this.emailForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n  }\n\n  open(contents) {\n\n    console.log('content', contents)\n    if (!contents) {\n      this.isAdd = true\n    } else {\n      this.isEdit = false\n    }\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.id = contents ? contents._id : \"\";\n    modalRef.componentInstance.name = contents ? contents.name : \"\";\n    modalRef.componentInstance.content = contents ? contents.content : \"\";\n    modalRef.componentInstance.isAdd = this.isAdd;\n  }\n  view(emailContents) {\n    if (!emailContents) {\n      this.isView = true\n    } else {\n      return false\n    }\n    const modalRef = this.modalService.open(NgbdModalContent);\n    // modalRef.componentInstance.name = 'World';\n    modalRef.componentInstance.id = emailContents ? emailContents._id : \"\";\n    modalRef.componentInstance.name = emailContents ? emailContents.name : \"\";\n    modalRef.componentInstance.content = emailContents ? emailContents.content : \"\";\n    modalRef.componentInstance.isAdd = this.isAdd;\n  }\n  deleteEmail(id) {\n\n    this.emailService.deleteEmails(id).subscribe(\n      data => {\n        this.modalReference.close();\n        console.log('datas..', data);\n        this.toastService.success(data['response'].responseMessage);\n        // this.toastService.success(data);\n        this.emailService.getAllEmails().subscribe((response: any) => {\n          this.emailService.setEmails(response);\n         \n        })\n      },\n      error => {\n        console.log('error' + error)\n        this.toastService.error(error.errors);\n      });\n  }\n  delete(content) {\n    this.modalReference = this.modalService.open(content);\n  }\n  viewContent(content){\n    this.modalReference=this.modalService.open(content);\n  }\n  validateForm() {\n    if (this.emailForm.valid) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n}\n","import { EmailService } from './email.service';\nimport { EmailRoutingModule } from './email.routing';\nimport { EmailTemplatesComponent, NgbdModalContent } from './email-templates.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DefaultComponent } from '../../default.component';\nimport { NgxEditorModule } from 'ngx-editor';\nimport { LayoutModule } from '../../../../layouts/layout.module';\n// import { CustomPipePipe } from '../../../../../../app/custom-pipe.pipe';\n\nconst routes: Routes = [{\n\tpath: \"\",\n\tcomponent: DefaultComponent,\n\tchildren: [{\n\t\tpath: \"\",\n\t\tcomponent: EmailTemplatesComponent\n\t}]\n}];\n\n@NgModule({\n\timports: [\n\t\tCommonModule, RouterModule.forChild(routes),\n\t\tLayoutModule,\n\t\tEmailRoutingModule,\n\t\tNgxEditorModule,\n\t\tNgbModule.forRoot(),\n\t\tFormsModule,\n\t\tReactiveFormsModule\n\t],\n\texports: [EmailTemplatesComponent, NgbdModalContent],\n\tdeclarations: [\n\t\tEmailTemplatesComponent, NgbdModalContent],\n\tproviders: [EmailService],\n\tentryComponents: [NgbdModalContent]\n})\nexport class EmailTemplatesModule {\n}\n","import { EmailTemplatesComponent } from './email-templates.component';\nimport { DefaultComponent } from './../../default.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nconst routes: Routes = [{\n  path: \"\",\n  component: DefaultComponent,\n  children: [\n    {\n      path: '',\n      component: EmailTemplatesComponent,\n\n    }]\n}]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [],\n  providers: []\n})\n\nexport class EmailRoutingModule { }\n","// import { URL } from './../../../../../app.service';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { map, catchError } from \"rxjs/operators\";\nimport { Observable, throwError } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst URL: string = \"http://localhost:4009/solow/v2/api/admin/\";\nconst URLS: string = \"http://66.70.179.133:4009/solow/v2/api/admin/\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EmailService {\n    emailList = new Subject<any>()\n    constructor(private http: HttpClient) {\n\n    }\n    setEmails(data: any) {\n        this.emailList.next({ emailList: data });\n    }\n    getEmails(): Observable<any>{\n        return this.emailList.asObservable();\n\n    }\n    getHeaderWithToken() {\n        let headers = new HttpHeaders()\n        headers = headers.set('Content-Type', 'application/json')\n        headers = headers.set('Authorization', JSON.parse(localStorage.getItem('jwt')))\n        return headers;\n    }\n    addEmail(email: any){\n        var admin_id=JSON.parse(localStorage.getItem('currentUser'));\n        return this.http.post<any>(URL + 'createEmailTemplate/'+admin_id, email, { headers: this.getHeaderWithToken() })\n            .pipe(\n                map((res: Response) => { return res }),\n            );\n    \n    }\n    getAllEmails() {\n        return this.http.get(URL + 'getEmailTemplates/', { headers: this.getHeaderWithToken() })\n        .pipe(\n            map((res:Response)=>{ return res})\n        );\n    }\n\n   \n    editEmails(email:any,email_id: any) {\n        return this.http.put<any>(URL + 'editEmailTemplate/' + email_id, email,{ headers: this.getHeaderWithToken() })\n            .pipe(\n                map((res: Response) => { return res }),\n            );\n    }\n    deleteEmails(email_id:any){\n     \n        return this.http.put<any>(URL + 'deleteEmailTemplate/' + email_id,{}, { headers: this.getHeaderWithToken() })\n            .pipe(\n                map((res: Response) => {\n                    return res }),\n            );\n\n    }\n    getAvailableEmailTemplate(){\n        \n        return this.http.get(URLS + 'availableEmailTemplates', { headers: this.getHeaderWithToken() })\n        .pipe(\n            map((res:Response)=>{ return res})\n        );\n\n    }\n  \n   \n}"],"sourceRoot":""}