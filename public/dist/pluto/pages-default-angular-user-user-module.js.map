{"version":3,"sources":["webpack:///./src/app/theme/pages/default/angular/user/user.component.css","webpack:///./src/app/theme/pages/default/angular/user/user.component.html","webpack:///./src/app/theme/pages/default/angular/user/user.component.ts","webpack:///./src/app/theme/pages/default/angular/user/user.module.ts","webpack:///./src/app/theme/pages/default/angular/user/user.routing.ts","webpack:///./src/app/theme/pages/default/angular/user/user.service.ts"],"names":[],"mappings":"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","file":"pages-default-angular-user-user-module.js","sourcesContent":["module.exports = \".btn-add{\\n    padding: 1.20rem 1.50rem;\\n    font-size: 1.25rem;\\n    line-height: 1.5;\\n    color:white;\\n    background-color: transparent;\\n    background: linear-gradient(to right, #fc4a1a, #f7b733);\\n    margin-left: 95%;\\n    margin-top:0%;\\n    border-color:#f7b733;\\n}\\n.lbl-err {\\n    color: red;\\n    /* position: inherit;\\n    font-size: 14px;\\n    bottom: -18px; */\\n }\\n.header{\\n    font-size: 3.15rem;\\n    margin-left: 25%;\\n    padding: 1.25rem 4.65rem;\\n   }\\n.btn-edit{\\n        color:white;\\n        background-color: transparent;\\n        background: #029c16;\\n        border-color:  #029c16;\\n\\n    }\\n.btn-delete{\\n        color:white;\\n        background-color: transparent;\\n        background: #a73a08;\\n        border-color: #a73a08;\\n\\n    }\\n.btn-view{\\n        color:white;\\n        background-color: transparent;\\n        background: #5867dd;\\n        border-color: #5867dd;\\n    }\\n.banner-image {\\n        /* height: 85px; */\\n        width: 130px;\\n        margin-left: 122px;\\n}\\n.btn-del{\\n    padding: 1.25rem 1.65rem;\\n    font-size: 1.25rem;\\n    line-height: 1.5;\\n    color:white;\\n    margin-right:45px;\\n background-color: transparent;\\n background: #a73a08;\\n    border-color: #a73a08;\\n}\\n.table1{\\n    margin: 43px;\\n}\"","module.exports = \"\\n<h2 class=\\\"header\\\">Users</h2>\\n <button class=\\\"btn-add\\\" (click)=\\\"open()\\\"><i class=\\\"fas fa-plus\\\"></i></button>\\n\\n<div class=\\\"table1\\\">\\n  <table  *ngIf=\\\"usersList\\\" datatable class=\\\"table-bordered table-hover\\\">\\n    <thead>\\n      <tr>\\n        <th>Sr.</th>\\n        <th>UserName</th>\\n        <th>Email</th>\\n        <th>Status</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n     \\n      <tr *ngFor=\\\"let user of usersList ; let i=index\\\">\\n        <td>{{i+1}}</td>\\n        <td>{{user.name}}</td>\\n        <td>{{user.email}}</td>\\n        <td>{{user.status}}</td>\\n     <td>\\n         \\n          <button type=\\\"button\\\" class=\\\"btn-view\\\">\\n            <i class=\\\"fas fa-eye\\\" (click)=\\\"open(user,'view')\\\"></i> \\n            </button>\\n             &nbsp;&nbsp;\\n          <button type=\\\"button\\\" class=\\\"btn-edit\\\">\\n            <i class=\\\"fas fa-edit\\\" (click)=\\\"open(user,'edit')\\\"></i>\\n          </button> &nbsp;&nbsp;\\n          <button type=\\\"button\\\" class=\\\"btn-delete\\\" (click)=\\\"delete(content)\\\">\\n            <i class=\\\"fas fa-trash-alt\\\"></i>\\n          </button>\\n          <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n            <div class=\\\"modal-body\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n              <div class=\\\"modal-body\\\">\\n                <img class=\\\"user-image\\\" src=\\\"./assets/app/media/img/users/delete-icn.svg\\\" height=\\\"60\\\">\\n                <p>Are you sure you want to delete this record?</p>\\n              </div>\\n              <div class=\\\"text-center mt-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-red\\\" (click)=\\\"deleteUser(user._id)\\\">Delete</button>\\n              </div>\\n            </div>\\n          </ng-template>\\n\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  </div>\\n\\n\\n\"","// import { OnInit } from '@angular/core';\nimport { Message, Password } from 'primeng/primeng';\nimport { UserService } from './user.service';\nimport { Component, OnInit, Output, EventEmitter, Input, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators, FormControl, FormGroup, FormArray } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ScriptLoaderService } from '../../../../../_services/script-loader.service';\n\n\n\n\n@Component({\n  selector: 'app-user',\n  template: ` <div class=\"modal-header\">\n  <h4 class=\"modal-title\">{{ isAdd ? 'Add' : isView ? 'View' : 'Edit'}} User</h4>  \n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n<form [formGroup]=\"userForm\" (ngSubmit)=\"addUsers()\">\n            <div class=\"form-group\">\n                <label for=\"name\">User Name</label>\n                <input type=\"text\" formControlName=\"name\" [(ngModel)]=\"name\" class=\"form-control\"/>\n                <p *ngIf=\"userForm.controls.name.errors?.required && (userForm.controls.name.dirty || userForm.controls.name.touched)\" class=\"lbl-err\">Name is required.</p>\n             </div>\n\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" formControlName=\"email\" [(ngModel)]=\"email\" class=\"form-control\" />\n                <p *ngIf=\"userForm.controls.email.errors?.required  && (userForm.controls.email.dirty || userForm.controls.email.touched)\" class=\"lbl-err\">email Id is required.</p>\n                <p *ngIf=\"userForm.controls.email.errors?.pattern  && (userForm.controls.email.dirty || userForm.controls.email.touched)\" class=\"lbl-err\">Enter Valid Email.</p>\n             </div>\n\n            <div class=\"form-group\">\n              <label for=\"deviceId\">DeviceId</label>\n              <input type=\"text\" formControlName=\"deviceId\" [(ngModel)]=\"deviceId\" class=\"form-control\" />\n              <p *ngIf=\"userForm.controls.deviceId.errors?.required  && (userForm.controls.deviceId.dirty || userForm.controls.deviceId.touched)\" class=\"lbl-err\">Device Id is required.</p>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"deviceType\">Device Type</label>\n              <input type=\"text\" formControlName=\"deviceType\" [(ngModel)]=\"deviceType\" class=\"form-control\" />\n              <p *ngIf=\"userForm.controls.deviceType.errors?.required  && (userForm.controls.deviceType.dirty || userForm.controls.deviceType.touched)\" class=\"lbl-err\">Device Type  is required.</p>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"fcmToken\">fcm Token</label>\n              <input type=\"text\" formControlName=\"fcmToken\" [(ngModel)]=\"fcmToken\" class=\"form-control\" />\n              <p *ngIf=\"userForm.controls.fcmToken.errors?.required  && (userForm.controls.fcmToken.dirty || userForm.controls.fcmToken.touched)\" class=\"lbl-err\">fcmToken is required.</p>\n            </div>\n\n            <div [hidden]=\"!isAdd\">\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\"  [(ngModel)]=\"password\" class=\"form-control\"/>\n                <p *ngIf=\"userForm.controls.password.errors?.required  && (userForm.controls.password.dirty || userForm.controls.password.touched)\" class=\"lbl-err\">password is required.</p>\n                <p *ngIf=\"userForm.controls.password.errors?.pattern  && (userForm.controls.password.dirty || userForm.controls.password.touched)\" class=\"lbl-err\">Enter Valid Password.</p>\n           </div>\n           </div>\n        <div class=\"modal-footer\">\n            <div class=\"form-group\" *ngIf=\"!isView\">\n           <button type=\"submit\"  class=\"btn btn-outline-dark\" [disabled]=\"validateForm()\">Save</button>&nbsp;&nbsp;\n           <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Cancel</button>\n            </div>\n         </div>\n        </form>`,\n  styleUrls: ['./user.component.css']\n})\n\nexport class NgbdModalContent {\n  usersList: Array<any>;\n  userForm: FormGroup;\n\n  @Input() id;\n  @Input() name;\n  @Input() email;\n  @Input() password;\n  @Input() deviceId;\n  @Input() deviceType;\n  @Input() fcmToken;\n  loading = false;\n  submitted = false;\n  isAdd: boolean;\n  isView: boolean;\n\n  constructor(public activeModal: NgbActiveModal,\n    private _router: Router,\n    private _formBuilder: FormBuilder,\n    private modalService: NgbModal,\n    private userService: UserService,\n    private toastService: ToastrService) { }\n\n  ngOnInit() {\n    this.buildUserForm();\n  }\n\n  get f() {\n    return this.userForm.controls;\n  }\n  buildUserForm() {\n    this.userForm = this._formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]],\n      password: ['', [Validators.required]],\n      deviceId: ['', Validators.required],\n      deviceType: ['', Validators.required],\n      fcmToken: ['', Validators.required]\n    });\n  }\n\n  addUsers() {\n    var addObj = {\n      \"name\": this.userForm.controls['name'].value,\n      \"email\": this.userForm.controls['email'].value,\n      \"password\": this.userForm.controls['password'].value,\n      \"deviceId\": this.userForm.controls['deviceId'].value,\n      \"deviceType\": this.userForm.controls['deviceType'].value,\n      \"fcmToken\": this.userForm.controls['fcmToken'].value,\n    }\n    if (this.isAdd) {\n       this.userService.addUser(addObj).subscribe(\n        data => {\n          this.getAllUser();\n          this.activeModal.dismiss();\n          this.toastService.success(data['message']);\n        },\n        error => {\n          this.toastService.error(error['message']);\n        });\n    } else {\n    \n      this.userService.editUser(addObj, this.id).subscribe(\n        data => {\n          this.getAllUser();\n          this.activeModal.dismiss();\n          this.toastService.success(data['message']);\n        },\n        error => {\n          this.toastService.error(error['message']);\n        });\n    }\n  }\n\n  getAllUser() {\n    this.userService.getAllUsers().subscribe((response: any) => {\n      this.userService.setUsers(response);\n    })\n  }\n\n  validateForm() {\n  \n    if (this.userForm.valid) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n\n}\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\n\nexport class UserComponent implements OnInit, AfterViewInit {\n  // usersDetail: any;\n\n  modalReference: any;\n  isAdd: boolean = false;\n  usersList: Array<any>;\n  userForm: FormGroup;\n  loading = false;\n  submitted = false;\n  isView: boolean = false;\n  constructor(private modalService: NgbModal,\n    private location: Location,\n    private toastService: ToastrService,\n    private _formBuilder: FormBuilder,\n    private userService: UserService,\n    private _script: ScriptLoaderService) {\n\n    this.userService.getUsers().subscribe((data: any) => {\n      this.usersList = data.usersList.data\n    });\n  }\n  ngAfterViewInit() {\n    this._script.loadScripts('app-user',\n      ['assets/vendors/custom/datatables/datatables.bundle.js',\n        'assets/demo/default/custom/crud/datatables/basic/paginations.js']);\n  }\n\n  ngOnInit() {\n   this.getUserList();\n  }\n  open(content, type) {\n    if (!content) {\n      this.isAdd = true\n    } else {\n      if (type == 'view') {\n        this.isView = true\n        this.isAdd = false\n      } else {\n        this.isAdd = false\n        this.isView = false\n      }\n    }\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.id = content ? content._id : \"\";\n    modalRef.componentInstance.name = content ? content.name : \"\";\n    modalRef.componentInstance.password = content ? content.password : \"\";\n    modalRef.componentInstance.email = content ? content.email : \"\";\n    modalRef.componentInstance.deviceId = content ? content.deviceId : \"\";\n    modalRef.componentInstance.deviceType = content ? content.deviceType : \"\";\n    modalRef.componentInstance.fcmToken = content ? content.fcmToken : \"\";\n    modalRef.componentInstance.isAdd = this.isAdd;\n    modalRef.componentInstance.isView = this.isView;\n  }\n\n  // All User Display Method\n  getUserList() {\n    this.userService.getAllUsers().subscribe((response: any) => {\n      // console.log(\"all data here display\")\n      this.usersList = response.data;\n    });\n  }\n\n  deleteUser(id) {\n    this.userService.deleteUser(id).subscribe(\n      data => {\n        this.modalReference.close();\n        this.getUserList();\n        this.toastService.success(data['message']);\n      },\n      error => {\n        this.toastService.error(error['message']);\n      });\n  }\n\n  delete(content) {\n    this.modalReference = this.modalService.open(content);\n  }\n\n  validateForm() {\n    if (this.userForm.valid) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { UserComponent, NgbdModalContent } from './user.component';\nimport { UserService } from './user.service';\nimport { UserRoutingModule } from './user.routing';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DefaultComponent } from '../../default.component';\nimport { LayoutModule } from '../../../../layouts/layout.module';\nimport { DataTablesModule } from 'angular-datatables';\n// import { ScriptLoaderService } from './_services/script-loader.service';\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: DefaultComponent,\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: \"\",\n\t\t\t\tcomponent: UserComponent\n\t\t\t}\n\t\t]\n\t},\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule, RouterModule.forChild(routes),\n\t\tUserRoutingModule,\n\t\tLayoutModule,\n\t\tNgbModule.forRoot(),\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tDataTablesModule,\n\n\t],\n\n\texports: [UserComponent, NgbdModalContent],\n\tdeclarations: [UserComponent, NgbdModalContent],\n\tproviders: [UserService,],\n\tentryComponents: [NgbdModalContent]\n\n})\nexport class UserModule {\n}","import { UserComponent,NgbdModalContent } from './user.component';\nimport { DefaultComponent } from './../../default.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: DefaultComponent,\n    children: [\n        {\n    path: '',\n    component: UserComponent,\n   \n  },\n  \n\n  \n]\n\n},\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [],\n  providers: []\n})\n\nexport class UserRoutingModule { }\n","import { URL } from './../../../../../app.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { map, catchError } from \"rxjs/operators\";\nimport { Observable, throwError } from 'rxjs';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n    private usersList = new Subject<any>()\n    constructor(private http: HttpClient) {\n\n    }\n    setUsers(data: any) {\n        this.usersList.next({ usersList: data });\n    }\n    getUsers(): Observable<any> {\n        return this.usersList.asObservable();\n\n    }\n    getHeaderWithToken() {\n        let headers = new HttpHeaders()\n        headers = headers.set('Content-Type', 'application/json')\n        let token = JSON.parse(localStorage.getItem('_token'))\n        headers = headers.set('Authorization', token)\n        return headers;\n    }\n    addUser(user: any) {\n       return this.http.post<any>(URL + 'admin/addUser', user, { headers: this.getHeaderWithToken() })\n            .pipe(\n                map((res: Response) => { return res }),\n            );\n\n    }\n    getAllUsers() {\n        return this.http.get(URL + 'admin/getUserList', { headers: this.getHeaderWithToken() })\n            .pipe(\n                map((res: Response) => { return res })\n            );\n    }\n\n    editUser(user: any, id: any) {\n        return this.http.put<any>(URL + 'admin/updateUser/' + id, user, { headers: this.getHeaderWithToken() })\n            .pipe(\n                map((res: Response) => { return res }),\n            );\n    }\n\n    deleteUser(id: any) {\n        return this.http.put<any>(URL + 'admin/deleteUser/' + id, {}, { headers: this.getHeaderWithToken() })\n            .map((res: Response) => {\n                return res\n            });\n\n    }\n\n\n\n}"],"sourceRoot":""}